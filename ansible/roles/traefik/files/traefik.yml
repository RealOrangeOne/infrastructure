entryPoints:
  web:
    address: :80
    http:
      redirections:
        entryPoint:
          to: web-secure
          scheme: https
    {% if ansible_hostname == "docker" %}
    proxyProtocol:
      trustedIPs:
        - "{{ pve_hosts.ingress.ip }}/32"
    {% endif %}
  web-secure:
    address: :443
    http:
      middlewares:
        - floc-block@file
        - compress@file
        - secure-headers@file
      tls:
        certResolver: "{{ 'acme-tls' if traefik_tls_challenge else 'acme-http' }}"
        {% if traefik_tls_challenge %}
        domains:
          - main: theorangeone.net
            sans: ["*.theorangeone.net"]
          - main: jakehoward.tech
            sans: ["*.jakehoward.tech"]
          - main: 0rng.one
            sans: ["*.0rng.one"]
        {% endif %}
    {% if ansible_hostname == "docker" %}
    proxyProtocol:
      trustedIPs:
        - "{{ pve_hosts.ingress.ip }}/32"
    forwardedHeaders:
      trustedIPs:
        - "{{ wireguard.server.ip }}/32"  # This is obtained from the connecting `proxy_protocol`
    {% endif %}
    transport:
      respondingTimeouts:
        readTimeout: 180s
  traefik:
    address: :8080

ping: {}

providers:
  docker:
    endpoint: tcp://docker_proxy:2375
    watch: true
    exposedByDefault: false
    network: traefik
  file:
    directory: /etc/traefik/conf

api:
  dashboard: true
  insecure: true
  disableDashboardAd: true

certificatesResolvers:
  acme-tls:
    acme:
      email: "{{ vault_letsencrypt_email }}"
      storage: /etc/traefik/acme.json
      dnsChallenge:
        provider: gandiv5
        delayBeforeCheck: 0s
        resolvers:
          - 9.9.9.9:53
          - 149.112.112.112:53
  acme-http:
    acme:
      email: "{{ vault_letsencrypt_email }}"
      storage: /etc/traefik/acme.json
      httpChallenge:
        entryPoint: web


serversTransport:
  insecureSkipVerify: true

metrics:
  prometheus:
    entryPoint: traefik

tls:
  options:
    default:
      minVersion: VersionTLS12

pilot:
  dashboard: false
